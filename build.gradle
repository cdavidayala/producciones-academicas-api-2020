buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }        
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'maven-publish'
    id "jacoco"
    id "org.sonarqube" version "2.7"
}

sourceSets {
    main.java.srcDir "src/main/java"
    main.resources.srcDir "src/main/resources"
    test.java.srcDir "src/test/java"
    test.resources.srcDir "src/test/resources"
}

group = 'co.edu.udea.produccionesacademicas.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.6.RELEASE'
    implementation 'org.postgresql:postgresql:42.2.5'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    testImplementation 'junit:junit:4.12'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    //testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.9'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.28.2'

}

allprojects {
    apply plugin: "com.jfrog.artifactory"
    apply plugin: "org.sonarqube"
    apply plugin: "jacoco"
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'gradle-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
        publishBuildInfo = true
        publishArtifacts = true
        publishPom = true       
    }
    resolve {
        repository {
            repoKey = 'gradle-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}